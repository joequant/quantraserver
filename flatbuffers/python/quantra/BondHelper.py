# automatically generated by the FlatBuffers compiler, do not modify

# namespace: quantra

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class BondHelper(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = BondHelper()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsBondHelper(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # BondHelper
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # BondHelper
    def Rate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # BondHelper
    def SettlementDays(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # BondHelper
    def FaceAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # BondHelper
    def Schedule(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from quantra.Schedule import Schedule
            obj = Schedule()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # BondHelper
    def CouponRate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # BondHelper
    def DayCounter(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # BondHelper
    def BusinessDayConvention(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # BondHelper
    def Redemption(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # BondHelper
    def IssueDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def Start(builder): builder.StartObject(9)
def BondHelperStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddRate(builder, rate): builder.PrependFloat64Slot(0, rate, 0.0)
def BondHelperAddRate(builder, rate):
    """This method is deprecated. Please switch to AddRate."""
    return AddRate(builder, rate)
def AddSettlementDays(builder, settlementDays): builder.PrependInt32Slot(1, settlementDays, 0)
def BondHelperAddSettlementDays(builder, settlementDays):
    """This method is deprecated. Please switch to AddSettlementDays."""
    return AddSettlementDays(builder, settlementDays)
def AddFaceAmount(builder, faceAmount): builder.PrependFloat64Slot(2, faceAmount, 0.0)
def BondHelperAddFaceAmount(builder, faceAmount):
    """This method is deprecated. Please switch to AddFaceAmount."""
    return AddFaceAmount(builder, faceAmount)
def AddSchedule(builder, schedule): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(schedule), 0)
def BondHelperAddSchedule(builder, schedule):
    """This method is deprecated. Please switch to AddSchedule."""
    return AddSchedule(builder, schedule)
def AddCouponRate(builder, couponRate): builder.PrependFloat64Slot(4, couponRate, 0.0)
def BondHelperAddCouponRate(builder, couponRate):
    """This method is deprecated. Please switch to AddCouponRate."""
    return AddCouponRate(builder, couponRate)
def AddDayCounter(builder, dayCounter): builder.PrependInt8Slot(5, dayCounter, 0)
def BondHelperAddDayCounter(builder, dayCounter):
    """This method is deprecated. Please switch to AddDayCounter."""
    return AddDayCounter(builder, dayCounter)
def AddBusinessDayConvention(builder, businessDayConvention): builder.PrependInt8Slot(6, businessDayConvention, 0)
def BondHelperAddBusinessDayConvention(builder, businessDayConvention):
    """This method is deprecated. Please switch to AddBusinessDayConvention."""
    return AddBusinessDayConvention(builder, businessDayConvention)
def AddRedemption(builder, redemption): builder.PrependFloat64Slot(7, redemption, 0.0)
def BondHelperAddRedemption(builder, redemption):
    """This method is deprecated. Please switch to AddRedemption."""
    return AddRedemption(builder, redemption)
def AddIssueDate(builder, issueDate): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(issueDate), 0)
def BondHelperAddIssueDate(builder, issueDate):
    """This method is deprecated. Please switch to AddIssueDate."""
    return AddIssueDate(builder, issueDate)
def End(builder): return builder.EndObject()
def BondHelperEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)